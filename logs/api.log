{"level": "INFO", "logger": "api", "message": "request_start", "time": "2025-08-17T20:01:40", "request_id": null, "path": "/secure-ping", "method": "GET"}
{"level": "INFO", "logger": "api", "message": "request_end", "time": "2025-08-17T20:01:40", "request_id": null, "path": "/secure-ping", "status": 401}
{"level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/secure-ping \"HTTP/1.1 401 Unauthorized\"", "time": "2025-08-17T20:01:40"}
{"level": "INFO", "logger": "api", "message": "request_start", "time": "2025-08-17T20:01:40", "request_id": null, "path": "/secure-ping", "method": "GET"}
{"level": "INFO", "logger": "api", "message": "request_end", "time": "2025-08-17T20:01:40", "request_id": null, "path": "/secure-ping", "status": 200}
{"level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/secure-ping \"HTTP/1.1 200 OK\"", "time": "2025-08-17T20:01:40"}
{"level": "INFO", "logger": "api", "message": "request_start", "time": "2025-08-17T20:01:40", "request_id": null, "path": "/health", "method": "OPTIONS"}
{"level": "INFO", "logger": "api", "message": "request_end", "time": "2025-08-17T20:01:40", "request_id": null, "path": "/health", "status": 200}
{"level": "INFO", "logger": "httpx", "message": "HTTP Request: OPTIONS http://testserver/health \"HTTP/1.1 200 OK\"", "time": "2025-08-17T20:01:40"}
{"level": "INFO", "logger": "api", "message": "request_start", "time": "2025-08-17T20:01:40", "request_id": null, "path": "/health", "method": "GET"}
{"level": "INFO", "logger": "api", "message": "request_end", "time": "2025-08-17T20:01:40", "request_id": null, "path": "/health", "status": 200}
{"level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "time": "2025-08-17T20:01:40"}
{"level": "INFO", "logger": "api", "message": "request_start", "time": "2025-08-17T20:01:40", "request_id": null, "path": "/boom", "method": "GET"}
{"level": "INFO", "logger": "api", "message": "request_end", "time": "2025-08-17T20:01:40", "request_id": null, "path": "/boom", "status": 404}
{"level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/boom \"HTTP/1.1 404 Not Found\"", "time": "2025-08-17T20:01:40"}
{"level": "INFO", "logger": "api", "message": "request_start", "time": "2025-08-17T20:01:40", "request_id": null, "path": "/health", "method": "GET"}
{"level": "INFO", "logger": "api", "message": "request_end", "time": "2025-08-17T20:01:40", "request_id": null, "path": "/health", "status": 200}
{"level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "time": "2025-08-17T20:01:40"}
{"level": "INFO", "logger": "api", "message": "request_start", "time": "2025-08-17T20:01:40", "request_id": null, "path": "/health", "method": "GET"}
{"level": "INFO", "logger": "api", "message": "request_end", "time": "2025-08-17T20:01:40", "request_id": null, "path": "/health", "status": 200}
{"level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "time": "2025-08-17T20:01:40"}
{"level": "INFO", "logger": "api", "message": "request_start", "time": "2025-08-17T20:01:40", "request_id": null, "path": "/health", "method": "GET"}
{"level": "INFO", "logger": "api", "message": "request_end", "time": "2025-08-17T20:01:40", "request_id": null, "path": "/health", "status": 200}
{"level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "time": "2025-08-17T20:01:40"}
{"level": "INFO", "logger": "api", "message": "request_start", "time": "2025-08-17T20:01:40", "request_id": null, "path": "/health", "method": "GET"}
{"level": "INFO", "logger": "api", "message": "request_end", "time": "2025-08-17T20:01:40", "request_id": null, "path": "/health", "status": 200}
{"level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "time": "2025-08-17T20:01:40"}
{"level": "INFO", "logger": "api", "message": "request_start", "time": "2025-08-17T20:01:40", "request_id": null, "path": "/health", "method": "GET"}
{"level": "INFO", "logger": "api", "message": "request_end", "time": "2025-08-17T20:01:40", "request_id": null, "path": "/health", "status": 200}
{"level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "time": "2025-08-17T20:01:40"}
{"level": "INFO", "logger": "api", "message": "request_start", "time": "2025-08-17T20:01:40", "request_id": null, "path": "/health", "method": "GET"}
{"level": "INFO", "logger": "api", "message": "request_end", "time": "2025-08-17T20:01:40", "request_id": null, "path": "/health", "status": 200}
{"level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "time": "2025-08-17T20:01:40"}
{"level": "INFO", "logger": "api", "message": "request_start", "time": "2025-08-17T20:04:38", "request_id": null, "path": "/secure-ping", "method": "GET"}
{"level": "INFO", "logger": "api", "message": "request_end", "time": "2025-08-17T20:04:38", "request_id": null, "path": "/secure-ping", "status": 401}
{"level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/secure-ping \"HTTP/1.1 401 Unauthorized\"", "time": "2025-08-17T20:04:38"}
{"level": "INFO", "logger": "api", "message": "request_start", "time": "2025-08-17T20:04:38", "request_id": null, "path": "/secure-ping", "method": "GET"}
{"level": "INFO", "logger": "api", "message": "request_end", "time": "2025-08-17T20:04:38", "request_id": null, "path": "/secure-ping", "status": 200}
{"level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/secure-ping \"HTTP/1.1 200 OK\"", "time": "2025-08-17T20:04:38"}
{"level": "INFO", "logger": "api", "message": "request_start", "time": "2025-08-17T20:04:38", "request_id": null, "path": "/health", "method": "OPTIONS"}
{"level": "INFO", "logger": "api", "message": "request_end", "time": "2025-08-17T20:04:38", "request_id": null, "path": "/health", "status": 200}
{"level": "INFO", "logger": "httpx", "message": "HTTP Request: OPTIONS http://testserver/health \"HTTP/1.1 200 OK\"", "time": "2025-08-17T20:04:38"}
{"level": "INFO", "logger": "api", "message": "request_start", "time": "2025-08-17T20:04:38", "request_id": null, "path": "/boom", "method": "GET"}
{"level": "ERROR", "logger": "obs", "message": "unhandled_error", "time": "2025-08-17T20:04:38", "request_id": "xyz", "path": "/boom", "exc_info": "Traceback (most recent call last):\n  File \"C:\\Project Forge\\TestAutomationApp\\backend\\python\\.venv\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 157, in call_next\n    message = await recv_stream.receive()\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Project Forge\\TestAutomationApp\\backend\\python\\.venv\\Lib\\site-packages\\anyio\\streams\\memory.py\", line 126, in receive\n    raise EndOfStream from None\nanyio.EndOfStream\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\Project Forge\\TestAutomationApp\\backend\\python\\observability.py\", line 24, in dispatch\n    response = await call_next(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Project Forge\\TestAutomationApp\\backend\\python\\.venv\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 163, in call_next\n    raise app_exc\n  File \"C:\\Project Forge\\TestAutomationApp\\backend\\python\\.venv\\Lib\\site-packages\\starlette\\middleware\\base.py\", line 149, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"C:\\Project Forge\\TestAutomationApp\\backend\\python\\.venv\\Lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 62, in __call__\n    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)\n  File \"C:\\Project Forge\\TestAutomationApp\\backend\\python\\.venv\\Lib\\site-packages\\starlette\\_exception_handler.py\", line 62, in wrapped_app\n    raise exc\n  File \"C:\\Project Forge\\TestAutomationApp\\backend\\python\\.venv\\Lib\\site-packages\\starlette\\_exception_handler.py\", line 51, in wrapped_app\n    await app(scope, receive, sender)\n  File \"C:\\Project Forge\\TestAutomationApp\\backend\\python\\.venv\\Lib\\site-packages\\starlette\\routing.py\", line 715, in __call__\n    await self.middleware_stack(scope, receive, send)\n  File \"C:\\Project Forge\\TestAutomationApp\\backend\\python\\.venv\\Lib\\site-packages\\starlette\\routing.py\", line 735, in app\n    await route.handle(scope, receive, send)\n  File \"C:\\Project Forge\\TestAutomationApp\\backend\\python\\.venv\\Lib\\site-packages\\starlette\\routing.py\", line 288, in handle\n    await self.app(scope, receive, send)\n  File \"C:\\Project Forge\\TestAutomationApp\\backend\\python\\.venv\\Lib\\site-packages\\starlette\\routing.py\", line 76, in app\n    await wrap_app_handling_exceptions(app, request)(scope, receive, send)\n  File \"C:\\Project Forge\\TestAutomationApp\\backend\\python\\.venv\\Lib\\site-packages\\starlette\\_exception_handler.py\", line 62, in wrapped_app\n    raise exc\n  File \"C:\\Project Forge\\TestAutomationApp\\backend\\python\\.venv\\Lib\\site-packages\\starlette\\_exception_handler.py\", line 51, in wrapped_app\n    await app(scope, receive, sender)\n  File \"C:\\Project Forge\\TestAutomationApp\\backend\\python\\.venv\\Lib\\site-packages\\starlette\\routing.py\", line 73, in app\n    response = await f(request)\n               ^^^^^^^^^^^^^^^^\n  File \"C:\\Project Forge\\TestAutomationApp\\backend\\python\\.venv\\Lib\\site-packages\\fastapi\\routing.py\", line 301, in app\n    raw_response = await run_endpoint_function(\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Project Forge\\TestAutomationApp\\backend\\python\\.venv\\Lib\\site-packages\\fastapi\\routing.py\", line 214, in run_endpoint_function\n    return await run_in_threadpool(dependant.call, **values)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Project Forge\\TestAutomationApp\\backend\\python\\.venv\\Lib\\site-packages\\starlette\\concurrency.py\", line 39, in run_in_threadpool\n    return await anyio.to_thread.run_sync(func, *args)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Project Forge\\TestAutomationApp\\backend\\python\\.venv\\Lib\\site-packages\\anyio\\to_thread.py\", line 56, in run_sync\n    return await get_async_backend().run_sync_in_worker_thread(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Project Forge\\TestAutomationApp\\backend\\python\\.venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py\", line 2476, in run_sync_in_worker_thread\n    return await future\n           ^^^^^^^^^^^^\n  File \"C:\\Project Forge\\TestAutomationApp\\backend\\python\\.venv\\Lib\\site-packages\\anyio\\_backends\\_asyncio.py\", line 967, in run\n    result = context.run(func, *args)\n             ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Project Forge\\TestAutomationApp\\backend\\python\\tests\\test_errors.py\", line 9, in boom\n    raise RuntimeError(\"kaboom\")\nRuntimeError: kaboom"}
{"level": "INFO", "logger": "api", "message": "request_end", "time": "2025-08-17T20:04:38", "request_id": null, "path": "/boom", "status": 500}
{"level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/boom \"HTTP/1.1 500 Internal Server Error\"", "time": "2025-08-17T20:04:38"}
{"level": "INFO", "logger": "api", "message": "request_start", "time": "2025-08-17T20:04:38", "request_id": null, "path": "/health", "method": "GET"}
{"level": "INFO", "logger": "api", "message": "request_end", "time": "2025-08-17T20:04:38", "request_id": null, "path": "/health", "status": 200}
{"level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "time": "2025-08-17T20:04:38"}
{"level": "INFO", "logger": "api", "message": "request_start", "time": "2025-08-17T20:04:38", "request_id": null, "path": "/health", "method": "GET"}
{"level": "INFO", "logger": "api", "message": "request_end", "time": "2025-08-17T20:04:38", "request_id": null, "path": "/health", "status": 200}
{"level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "time": "2025-08-17T20:04:38"}
{"level": "INFO", "logger": "api", "message": "request_start", "time": "2025-08-17T20:04:38", "request_id": null, "path": "/health", "method": "GET"}
{"level": "INFO", "logger": "api", "message": "request_end", "time": "2025-08-17T20:04:38", "request_id": null, "path": "/health", "status": 200}
{"level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "time": "2025-08-17T20:04:38"}
{"level": "INFO", "logger": "api", "message": "request_start", "time": "2025-08-17T20:04:38", "request_id": null, "path": "/health", "method": "GET"}
{"level": "INFO", "logger": "api", "message": "request_end", "time": "2025-08-17T20:04:38", "request_id": null, "path": "/health", "status": 200}
{"level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "time": "2025-08-17T20:04:38"}
{"level": "INFO", "logger": "api", "message": "request_start", "time": "2025-08-17T20:04:38", "request_id": null, "path": "/health", "method": "GET"}
{"level": "INFO", "logger": "api", "message": "request_end", "time": "2025-08-17T20:04:38", "request_id": null, "path": "/health", "status": 200}
{"level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "time": "2025-08-17T20:04:38"}
{"level": "INFO", "logger": "api", "message": "request_start", "time": "2025-08-17T20:04:38", "request_id": null, "path": "/health", "method": "GET"}
{"level": "INFO", "logger": "api", "message": "request_end", "time": "2025-08-17T20:04:38", "request_id": null, "path": "/health", "status": 200}
{"level": "INFO", "logger": "httpx", "message": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "time": "2025-08-17T20:04:38"}
